plugins {
    id('com.android.application')
    id('kotlin-android')
    id('kotlin-parcelize')
    id('com.google.gms.google-services')
    id('com.google.firebase.crashlytics')
    id('com.google.firebase.firebase-perf')
    id('org.jetbrains.dokka')
    id('com.google.android.secrets-gradle-plugin') version '1.1.0'
    id('com.google.devtools.ksp')
}

apply from: './version.gradle'

android {
    namespace 'com.arnyminerz.cea.app'
    compileSdk 33

    defaultConfig {
        applicationId "com.arnyminerz.cea.app"
        minSdk 21
        targetSdk 33
        versionCode findProperty("android.versionCode") as Integer
        versionName VERSION_NAME

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }

        def locales = ["en"]
        buildConfigField "String[]", "TRANSLATION_ARRAY", "new String[]{\"" + locales.join("\",\"") + "\"}"
        resConfigs locales

        // Export database schema
        ksp {
            arg("room.schemaLocation", "$projectDir/schemas".toString())
        }
    }

    // Configures the APK and AAB signing config
    signingConfigs {
        release {
            def props = new Properties()
            file("${rootDir}/local.properties").withInputStream { props.load(it) }

            storeFile file("keystore.jks")
            storePassword props.getProperty("SIGNING_KEYSTORE_PASSWORD")
            keyAlias props.getProperty("SIGNING_KEY_ALIAS")
            keyPassword props.getProperty("SIGNING_KEY_PASSWORD")
        }
    }

    buildTypes {
        release {
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            // Change the file name
            setProperty("archivesBaseName", "CEA-Android-${android.defaultConfig.versionCode}-${android.defaultConfig.versionName}")
            // Set the signing keys
            signingConfig signingConfigs.release
            // Enable minifying
            minifyEnabled true

            // Set the debug symbol level
            ndk.debugSymbolLevel = 'FULL'
        }
        debug {
            // Add the date as a suffix to the version name
            versionNameSuffix "-debug-build" + getDate()
            // Rename the output file
            setProperty("archivesBaseName", "CEA-Android")

            // Disable mapping file upload for Crashlytics
            firebaseCrashlytics {
                mappingFileUploadEnabled false
            }

            minifyEnabled false
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
        freeCompilerArgs += [
                '-Xjvm-default=all',
                // Allow experimental
                '-opt-in=kotlin.RequiresOptIn'
        ]
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.2.0'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

tasks.named("dokkaHtmlPartial") {
    dokkaSourceSets {
        configureEach {
            noAndroidSdkLink.set(false)
        }
    }
}

android.applicationVariants.all { variant ->
    if (variant.buildType.name == "release") {
        variant.assemble.doLast {
            // This increases version code on release
            def versionPropsFile = file("../gradle.properties")
            Properties versionProps = new Properties()
            versionProps.load(new FileInputStream(versionPropsFile))
            def code = versionProps['android.versionCode'].toInteger() + 1
            versionProps['android.versionCode'] = code.toString()
            versionProps.store(versionPropsFile.newWriter(), null)
            logger.lifecycle("Increased version code to $code")
        }
    }
}

secrets {
    propertiesFileName 'local.properties'

    ignoreList.add("SIGNING_KEYSTORE_PASSWORD")
    ignoreList.add("SIGNING_KEY_ALIAS")
    ignoreList.add("SIGNING_KEY_PASSWORD")
}

static def getDate() {
    def date = new Date()
    def formattedDate = date.format('yyyyMMddHHmmss')
    return formattedDate
}

dependencies {
    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.5.0'
    implementation 'androidx.activity:activity-compose:1.5.0'
    implementation 'androidx.appcompat:appcompat:1.6.0-alpha05'
    implementation 'com.google.android.material:material:1.6.1'

    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.material:material-icons-extended:$compose_version"
    implementation 'androidx.compose.material3:material3:1.0.0-alpha14'

    // Firebase libraries
    implementation platform('com.google.firebase:firebase-bom:30.3.0')
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-perf-ktx'
    implementation 'com.google.firebase:firebase-auth-ktx'
    implementation 'com.google.firebase:firebase-firestore-ktx'

    // Coil image loader
    def coil_version = "2.1.0"
    implementation "io.coil-kt:coil:$coil_version"
    implementation "io.coil-kt:coil-compose:$coil_version"

    // Google Play Services
    implementation 'com.google.android.gms:play-services-auth:20.2.0'

    // KotlinX extensions
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-play-services:1.6.4'

    // Accompanist
    implementation "com.google.accompanist:accompanist-pager:0.24.13-rc"

    // RSS Parser
    implementation 'com.prof18.rssparser:rssparser:4.0.2'

    // Timber logger
    implementation 'com.jakewharton.timber:timber:5.0.1'

    // Room Storage
    def room_version = "2.4.2"
    implementation "androidx.room:room-ktx:$room_version"
    ksp "androidx.room:room-compiler:$room_version"

    // ML Kit - Translation
    implementation 'com.google.mlkit:translate:17.0.0'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"
}